{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nvar _jsxFileName = \"C:\\\\Users\\\\Artur\\\\Documents\\\\Programming\\\\ig\\\\relay\\\\www\\\\client\\\\components\\\\Bot\\\\Logs.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, memo } from 'react';\nimport { Table, TableHead, TableRow, TableCell, TableBody, Typography, makeStyles, CircularProgress, Tooltip } from '@material-ui/core';\nimport getLogs from '../../api/logs/getLogs';\nimport getFollowedCounts from '../../api/logs/getFollowedCounts';\nimport { connect } from 'react-redux';\nimport ms from 'ms';\n\nvar getTimeAgo = function getTimeAgo(date) {\n  var diff = _Date$now() - date.getTime();\n  return \"\".concat(ms(diff, {\n    \"long\": true\n  }), \" ago\");\n};\n\nvar useStyles = makeStyles(function () {\n  return {\n    row: {\n      '& > *': {\n        paddingLeft: '0',\n        paddingRight: '6px'\n      },\n      '& > *:last-of-type': {\n        paddingRight: '0'\n      }\n    },\n    breakAll: {\n      wordBreak: 'break-all'\n    },\n    noWrap: {\n      whiteSpace: 'nowrap'\n    },\n    createdAt: {\n      userSelect: 'none'\n    }\n  };\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentAccount: state.bot.currentAccount\n  };\n};\n\nexport default connect(mapStateToProps)(memo(function (_ref) {\n  var currentAccount = _ref.currentAccount;\n\n  var _useState = useState(null),\n      logs = _useState[0],\n      setLogs = _useState[1];\n\n  useEffect(function () {\n    getLogs(currentAccount.accountId).then(setLogs);\n  }, [currentAccount.accountId]);\n\n  var _useState2 = useState(null),\n      followedCounts = _useState2[0],\n      setFollowedCounts = _useState2[1];\n\n  useEffect(function () {\n    getFollowedCounts(currentAccount.accountId).then(setFollowedCounts);\n  }, [currentAccount.accountId]);\n  var classes = useStyles({});\n  if (logs === null) return __jsx(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  });\n  return __jsx(React.Fragment, null, followedCounts === null ? __jsx(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Loading stats...\") : followedCounts.map(function (_ref2, index) {\n    var count = _ref2.count,\n        unfollowed = _ref2.unfollowed;\n    return __jsx(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Total \", unfollowed ? 'unfollowed' : 'followed', \" count: \", count);\n  }), __jsx(Table, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"type\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"payload\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"created at\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, logs.map(function (_ref3, index) {\n    var type = _ref3.type,\n        payload = _ref3.payload,\n        createdAt = _ref3.createdAt;\n    return __jsx(TableRow, {\n      key: index,\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, type), __jsx(TableCell, {\n      className: classes.breakAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, payload), __jsx(TableCell, {\n      className: classes.noWrap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(Tooltip, {\n      title: new Date(createdAt).toLocaleString('en-GB'),\n      placement: \"right\",\n      enterTouchDelay: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: classes.createdAt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, getTimeAgo(new Date(createdAt))))));\n  }))));\n}));","map":{"version":3,"sources":["C:/Users/Artur/Documents/Programming/ig/relay/www/client/components/Bot/Logs.tsx"],"names":["useState","useEffect","memo","Table","TableHead","TableRow","TableCell","TableBody","Typography","makeStyles","CircularProgress","Tooltip","getLogs","getFollowedCounts","connect","ms","getTimeAgo","date","diff","getTime","useStyles","row","paddingLeft","paddingRight","breakAll","wordBreak","noWrap","whiteSpace","createdAt","userSelect","mapStateToProps","state","currentAccount","bot","logs","setLogs","accountId","then","followedCounts","setFollowedCounts","classes","map","index","count","unfollowed","type","payload","Date","toLocaleString"],"mappings":"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","sourcesContent":["import { useState, useEffect, memo } from 'react'\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, Typography, makeStyles, CircularProgress, Tooltip } from '@material-ui/core'\r\nimport getLogs from '../../api/logs/getLogs'\r\nimport getFollowedCounts from '../../api/logs/getFollowedCounts'\r\nimport {Account} from '../../types/Account'\r\nimport { connect } from 'react-redux'\r\nimport ms from 'ms'\r\n\r\nconst getTimeAgo = (date: Date) => {\r\n  const diff = Date.now() - date.getTime()\r\n  return `${ms(diff, { long: true })} ago`\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  row: {\r\n    '& > *': {\r\n      paddingLeft: '0',\r\n      paddingRight: '6px'\r\n    },\r\n    '& > *:last-of-type': {\r\n      paddingRight: '0'\r\n    }\r\n  },\r\n  breakAll: {\r\n    wordBreak: 'break-all'\r\n  },\r\n  noWrap: {\r\n    whiteSpace: 'nowrap'\r\n  },\r\n  createdAt: {\r\n    userSelect: 'none'\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = state => ({\r\n  currentAccount: state.bot.currentAccount\r\n})\r\n\r\nexport default connect(mapStateToProps)(memo(({ currentAccount }: { currentAccount: Account }) => {\r\n  const [logs, setLogs] = useState(null)\r\n  useEffect(() => {\r\n    getLogs(currentAccount.accountId).then(setLogs)\r\n  }, [currentAccount.accountId])\r\n\r\n  const [followedCounts, setFollowedCounts] = useState(null)\r\n  useEffect(() => {\r\n    getFollowedCounts(currentAccount.accountId).then(setFollowedCounts)\r\n  }, [currentAccount.accountId])\r\n\r\n  const classes = useStyles({})\r\n\r\n  if(logs === null)\r\n    return <CircularProgress />\r\n\r\n  return (\r\n    <>\r\n      {followedCounts === null\r\n        ? <Typography variant=\"body1\" gutterBottom>Loading stats...</Typography>\r\n        : followedCounts.map(({ count, unfollowed }, index) =>\r\n            <Typography variant=\"body1\" gutterBottom key={index}>\r\n              Total { unfollowed ? 'unfollowed' : 'followed' } count: { count }\r\n            </Typography>\r\n          )}\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow className={classes.row}>\r\n            <TableCell>\r\n              type\r\n            </TableCell>\r\n            <TableCell>\r\n              payload\r\n            </TableCell>\r\n            <TableCell>\r\n              created at\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {logs.map(({ type, payload, createdAt }, index) =>\r\n            <TableRow key={index} className={classes.row}>\r\n              <TableCell>{ type }</TableCell>\r\n              <TableCell className={classes.breakAll}>{ payload }</TableCell>\r\n              <TableCell className={classes.noWrap}>\r\n                <Tooltip title={new Date(createdAt).toLocaleString('en-GB')} placement=\"right\" enterTouchDelay={0}>\r\n                  <span className={classes.createdAt}>\r\n                    { getTimeAgo(new Date(createdAt)) }\r\n                  </span>\r\n                </Tooltip>\r\n              </TableCell>\r\n            </TableRow> \r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </>\r\n  )\r\n}))"]},"metadata":{},"sourceType":"module"}