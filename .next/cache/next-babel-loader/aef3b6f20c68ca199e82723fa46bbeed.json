{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Artur\\\\Documents\\\\Programming\\\\ig\\\\relay\\\\www\\\\client\\\\components\\\\Bot\\\\Test.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { Button, CircularProgress, Typography } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport start from '../../api/bots/start';\nimport executeSupervisor from '../../api/bots/executeSupervisor';\nimport getSupervisors from '../../api/bots/getSupervisors';\nimport exit from '../../api/bots/exit';\nimport Streaming from '../Streaming';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentAccount: state.bot.currentAccount\n  };\n};\n\nvar States;\n\n(function (States) {\n  States[States[\"Initial\"] = 0] = \"Initial\";\n  States[States[\"Starting\"] = 1] = \"Starting\";\n})(States || (States = {}));\n\nexport default connect(mapStateToProps)(function (_ref) {\n  var currentAccount = _ref.currentAccount;\n\n  var _useState = useState(States.Initial),\n      bot = _useState[0],\n      setBot = _useState[1];\n\n  var startBot = function startBot() {\n    var id;\n    return _regeneratorRuntime.async(function startBot$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setBot(States.Starting);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(start(currentAccount.accountId));\n\n          case 3:\n            id = _context.sent;\n            if (id) setBot(id);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  console.log(bot);\n\n  var _useState2 = useState(null),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  var callSupervisor = function callSupervisor(botId, name, arity) {\n    var response;\n    return _regeneratorRuntime.async(function callSupervisor$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(arity === 0)) {\n              _context2.next = 6;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(executeSupervisor(botId, name));\n\n          case 3:\n            _context2.t0 = _context2.sent;\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(executeSupervisor(botId, name, prompt('Parameter:')));\n\n          case 8:\n            _context2.t0 = _context2.sent;\n\n          case 9:\n            response = _context2.t0;\n            setResponse(response == null ? null : response);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var _useState3 = useState([]),\n      supervisors = _useState3[0],\n      setSupervisors = _useState3[1];\n\n  useEffect(function () {\n    if (typeof bot === 'string') {\n      getSupervisors(bot).then(setSupervisors);\n    }\n  }, [bot]);\n  useEffect(function () {\n    setBot(States.Initial);\n    setResponse(null);\n    setSupervisors([]);\n  }, [currentAccount.accountId]);\n\n  var exitBot = function exitBot() {\n    if (typeof bot !== 'string') return;\n    exit(bot);\n    setBot(States.Initial);\n    setResponse(null);\n    setSupervisors([]);\n  };\n\n  useEffect(function () {\n    window.addEventListener('unload', exitBot);\n    console.log(\"window.addEventListener('unload', exitBot)\");\n    return function () {\n      exitBot();\n      window.removeEventListener('unload', exitBot);\n      console.log(\"window.removeEventListener('unload', exitBot)\");\n    };\n  }, [currentAccount.accountId, bot]);\n\n  var _useState4 = useState(true),\n      streaming = _useState4[0],\n      setStreaming = _useState4[1];\n\n  var toggleStreaming = function toggleStreaming() {\n    return setStreaming(function (streaming) {\n      return !streaming;\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, bot === States.Initial && __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: startBot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Odpalaj\"), bot === States.Starting && __jsx(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), typeof bot === 'string' && supervisors.length && __jsx(React.Fragment, null, __jsx(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Opcje\"), _Object$entries(supervisors.reduce(function (acc, _ref2) {\n    var type = _ref2.type,\n        rest = _objectWithoutProperties(_ref2, [\"type\"]);\n\n    if (acc[type]) {\n      acc[type].push(rest);\n      return acc;\n    }\n\n    acc[type] = [rest];\n    return acc;\n  }, {})).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        type = _ref4[0],\n        supervisors = _ref4[1];\n\n    return __jsx(\"div\", {\n      key: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"subtitle2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, type), supervisors.map(function (_ref5) {\n      var name = _ref5.name,\n          title = _ref5.title,\n          arity = _ref5.arity;\n      return __jsx(Button, {\n        variant: \"contained\",\n        key: name,\n        onClick: function onClick() {\n          return callSupervisor(bot, name, arity);\n        },\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, title);\n    }));\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Odpowied\\u017A: \", response === null ? 'brak' : \"\\\"\".concat(response, \"\\\"\")), __jsx(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Podgl\\u0105d\"), __jsx(Streaming, {\n    botId: bot,\n    open: streaming,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: toggleStreaming,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Prze\\u0142\\u0105cz\")));\n});","map":{"version":3,"sources":["C:/Users/Artur/Documents/Programming/ig/relay/www/client/components/Bot/Test.tsx"],"names":["useState","useEffect","Button","CircularProgress","Typography","connect","start","executeSupervisor","getSupervisors","exit","Streaming","mapStateToProps","state","currentAccount","bot","States","Initial","setBot","startBot","Starting","accountId","id","console","log","response","setResponse","callSupervisor","botId","name","arity","prompt","supervisors","setSupervisors","then","exitBot","window","addEventListener","removeEventListener","streaming","setStreaming","toggleStreaming","length","reduce","acc","type","rest","push","map","title"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from 'react'\r\nimport { Button, CircularProgress, Typography } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { Account } from '../../types/Account'\r\nimport start from '../../api/bots/start'\r\nimport executeSupervisor from '../../api/bots/executeSupervisor'\r\nimport getSupervisors from '../../api/bots/getSupervisors'\r\nimport exit from '../../api/bots/exit'\r\nimport Streaming from '../Streaming'\r\n\r\nconst mapStateToProps = state => ({\r\n  currentAccount: state.bot.currentAccount\r\n})\r\n\r\nenum States {\r\n  Initial,\r\n  Starting\r\n}\r\n\r\nexport default connect(mapStateToProps)(({ currentAccount }: { currentAccount: Account }) => {\r\n  const [bot, setBot] = useState<States | string>(States.Initial)\r\n  const startBot = async () => {\r\n    setBot(States.Starting)\r\n    const id = await start(currentAccount.accountId)\r\n    if(id)\r\n      setBot(id)\r\n  }\r\n\r\n  console.log(bot)\r\n\r\n  const [response, setResponse] = useState(null)\r\n  const callSupervisor = async (botId: string, name: string, arity: number) => {\r\n    const response = arity === 0\r\n      ? await executeSupervisor(botId, name)\r\n      : await executeSupervisor(botId, name, prompt('Parameter:'))\r\n\r\n    setResponse(response == null ? null : response)\r\n  }\r\n\r\n  const [supervisors, setSupervisors] = useState([])\r\n  useEffect(() => {\r\n    if(typeof bot === 'string'){\r\n      getSupervisors(bot).then(setSupervisors)\r\n    }\r\n  }, [bot])\r\n\r\n  useEffect(() => {\r\n    setBot(States.Initial)\r\n    setResponse(null)\r\n    setSupervisors([])\r\n  }, [currentAccount.accountId])\r\n\r\n  const exitBot = () => {\r\n    if(typeof bot !== 'string')\r\n      return\r\n\r\n    exit(bot)\r\n    setBot(States.Initial)\r\n    setResponse(null)\r\n    setSupervisors([])\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('unload', exitBot)\r\n    console.log(`window.addEventListener('unload', exitBot)`)\r\n    return () => {\r\n      exitBot()\r\n      window.removeEventListener('unload', exitBot)\r\n      console.log(`window.removeEventListener('unload', exitBot)`)\r\n    }\r\n  }, [currentAccount.accountId, bot])\r\n\r\n  const [streaming, setStreaming] = useState(true)\r\n  const toggleStreaming = () =>\r\n    setStreaming(streaming => !streaming)\r\n  \r\n  return (\r\n    <div>\r\n    {bot === States.Initial && <Button variant=\"contained\" color=\"primary\" onClick={startBot}>Odpalaj</Button>}\r\n    {bot === States.Starting && <CircularProgress />}\r\n    {typeof bot === 'string' && supervisors.length && (\r\n      <>\r\n        <Typography variant=\"h4\" gutterBottom>Opcje</Typography>\r\n        {Object.entries(\r\n          supervisors.reduce((acc, { type, ...rest }) => {\r\n            if (acc[type]) {\r\n              acc[type].push(rest)\r\n              return acc\r\n            }\r\n\r\n            acc[type] = [rest]\r\n            return acc\r\n          }, {})\r\n        )\r\n        .map(([type, supervisors]: [string, []]) =>\r\n          <div key={type}>\r\n            <Typography variant=\"subtitle2\">{type}</Typography>\r\n            {supervisors.map(({ name, title, arity }) =>\r\n              <Button variant=\"contained\" key={name} onClick={() => callSupervisor(bot, name, arity)} color=\"primary\">{title}</Button>\r\n            )}\r\n          </div>\r\n        )}\r\n        <br />\r\n        <Typography variant=\"h5\" gutterBottom>Odpowiedź: { response === null ? 'brak' : `\"${response}\"` }</Typography>\r\n        <Typography variant=\"h4\" gutterBottom>Podgląd</Typography>\r\n        <Streaming botId={bot} open={streaming} />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={toggleStreaming}>Przełącz</Button>\r\n      </>\r\n    )}\r\n    </div>\r\n  ) \r\n})"]},"metadata":{},"sourceType":"module"}