{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Artur\\\\Documents\\\\Programming\\\\ig\\\\relay\\\\www\\\\client\\\\components\\\\AddAccountDialog.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { DialogTitle, DialogContent, TextField, Button, DialogActions, DialogContentText, makeStyles, CircularProgress, FormControl, FormLabel } from '@material-ui/core';\nimport { useState, useRef } from 'react';\nimport Dialog from './Dialog';\nimport createAccount from '../api/accounts/createAccount';\nimport start from '../api/bots/start';\nimport executeSupervisor from '../api/bots/executeSupervisor';\nimport exit from '../api/bots/exit';\nimport setLogged from '../api/accounts/setLogged';\n\nvar tv = function tv(dispatch) {\n  return function (event) {\n    return void dispatch(event.target.value);\n  };\n};\n\nvar handleSubmit = function handleSubmit(dispatch) {\n  return function (event) {\n    event.preventDefault();\n    dispatch();\n  };\n};\n\nvar useStyles = makeStyles(function () {\n  return {\n    form: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    progress: {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  };\n});\nexport default (function (_ref) {\n  var open = _ref.open,\n      handleExit = _ref.handleExit;\n\n  var _useState = useState('unlogged'),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var savedAccountId = useRef(null);\n  var savedBotId = useRef(null);\n\n  var _useState2 = useState(''),\n      login = _useState2[0],\n      setLogin = _useState2[1];\n\n  var _useState3 = useState(''),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var log = function log() {\n    var botId, accountId, result;\n    return _regeneratorRuntime.async(function log$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            botId = savedBotId.current;\n            accountId = savedAccountId.current;\n            setStatus('logging');\n\n            if (!(botId === null)) {\n              _context.next = 19;\n              break;\n            }\n\n            if (!(accountId === null)) {\n              _context.next = 11;\n              break;\n            }\n\n            console.log('Creating account');\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(createAccount({\n              login: login\n            }));\n\n          case 8:\n            accountId = _context.sent;\n            savedAccountId.current = accountId;\n            console.log(\"Account \".concat(accountId, \" created\"));\n\n          case 11:\n            console.log(\"Starting bot\");\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(start(accountId));\n\n          case 14:\n            botId = _context.sent;\n            savedBotId.current = botId;\n            console.log(\"Bot \".concat(botId, \" started\"));\n            window.addEventListener('unload', exitBot);\n            console.log(\"window.addEventListener('unload', exitBot)\");\n\n          case 19:\n            console.log(\"Logging with credentials { login: '\".concat(login, \"', password: '\").concat(password, \"' }\"));\n            _context.next = 22;\n            return _regeneratorRuntime.awrap(executeSupervisor(botId, 'login', {\n              login: login,\n              password: password\n            }));\n\n          case 22:\n            result = _context.sent;\n            console.log(\"Result: \".concat(result));\n\n            if (!(result === 'error')) {\n              _context.next = 27;\n              break;\n            }\n\n            setStatus('wrong_credentials');\n            return _context.abrupt(\"return\");\n\n          case 27:\n            if (!(result === 'challenge')) {\n              _context.next = 30;\n              break;\n            }\n\n            setStatus('challenge');\n            return _context.abrupt(\"return\");\n\n          case 30:\n            if (!(result === 'success')) {\n              _context.next = 34;\n              break;\n            }\n\n            setStatus('success');\n            setLogged(savedAccountId.current, login);\n            return _context.abrupt(\"return\");\n\n          case 34:\n            throw \"Unknown login result (\".concat(result, \")\");\n\n          case 35:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var _useState4 = useState(''),\n      challengeCode = _useState4[0],\n      setChallengeCode = _useState4[1];\n\n  var challenge = function challenge() {\n    var result;\n    return _regeneratorRuntime.async(function challenge$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setStatus('challenging');\n            console.log(\"Passing challenge with code \".concat(challengeCode));\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(executeSupervisor(savedBotId.current, 'challenge', challengeCode));\n\n          case 4:\n            result = _context2.sent;\n            console.log(\"Passed challenge with result \".concat(result));\n\n            if (!(result === 'error')) {\n              _context2.next = 9;\n              break;\n            }\n\n            setStatus('wrong_challenge_code');\n            return _context2.abrupt(\"return\");\n\n          case 9:\n            if (!(result === 'success')) {\n              _context2.next = 13;\n              break;\n            }\n\n            setStatus('success');\n            setLogged(savedAccountId.current, login);\n            return _context2.abrupt(\"return\");\n\n          case 13:\n            throw \"Unknown challenge result (\".concat(result, \")\");\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var exitBot = function exitBot() {\n    exit(savedBotId.current);\n    console.log(\"Exitting bot \".concat(savedBotId.current));\n    setStatus('unlogged');\n    savedBotId.current = null;\n    savedAccountId.current = null;\n    setLogin('');\n    setPassword('');\n    window.removeEventListener('unload', exitBot);\n  };\n\n  var handleClose = function handleClose() {\n    var preventClose = ['logging', 'challenging'];\n    if (preventClose.includes(status)) return;\n\n    if (savedBotId.current !== null) {\n      exitBot();\n    }\n\n    handleExit();\n  };\n\n  var classes = useStyles({});\n  return __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    maxWidth: \"xs\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, (status === 'unlogged' || status === 'wrong_credentials') && __jsx(\"form\", {\n    onSubmit: handleSubmit(log),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Add Instagram account\"), __jsx(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"We do not store Instagram passwords.\"), __jsx(FormControl, {\n    error: status === 'wrong_credentials',\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, status === 'wrong_credentials' && __jsx(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Wrong password or login\"), __jsx(TextField, {\n    label: \"login\",\n    value: login,\n    onChange: tv(setLogin),\n    inputProps: {\n      required: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), __jsx(TextField, {\n    label: \"password\",\n    value: password,\n    onChange: tv(setPassword),\n    inputProps: {\n      required: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }))), __jsx(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Log me\"))), status === 'logging' && __jsx(React.Fragment, null, __jsx(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Add Instagram account\"), __jsx(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, __jsx(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }))), __jsx(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"primary\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Log me\"))), (status === 'challenge' || status === 'wrong_challenge_code') && __jsx(\"form\", {\n    onSubmit: handleSubmit(challenge),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, __jsx(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Add Instagram account\"), __jsx(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, __jsx(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Instagram sent authentication code to your e-mail.\"), __jsx(FormControl, {\n    error: status === 'wrong_challenge_code',\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, status === 'wrong_challenge_code' && __jsx(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Wrong code\"), __jsx(TextField, {\n    label: \"code\",\n    value: challengeCode,\n    onChange: tv(setChallengeCode),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }))), __jsx(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Enter my code\"))), status === 'challenging' && __jsx(React.Fragment, null, __jsx(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Add Instagram account\"), __jsx(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, __jsx(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Instagram sent authentication code to your e-mail.\"), __jsx(\"div\", {\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, __jsx(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }))), __jsx(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"primary\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Enter my code\"))), status === 'success' && __jsx(React.Fragment, null, __jsx(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Add Instagram account\"), __jsx(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, __jsx(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"Logged to \", login, \" account!\")), __jsx(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"primary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Okay\"))));\n});","map":{"version":3,"sources":["C:/Users/Artur/Documents/Programming/ig/relay/www/client/components/AddAccountDialog.tsx"],"names":["DialogTitle","DialogContent","TextField","Button","DialogActions","DialogContentText","makeStyles","CircularProgress","FormControl","FormLabel","useState","useRef","Dialog","createAccount","start","executeSupervisor","exit","setLogged","tv","dispatch","event","target","value","handleSubmit","preventDefault","useStyles","form","display","flexDirection","alignItems","progress","justifyContent","open","handleExit","status","setStatus","savedAccountId","savedBotId","login","setLogin","password","setPassword","log","botId","current","accountId","console","window","addEventListener","exitBot","result","challengeCode","setChallengeCode","challenge","removeEventListener","handleClose","preventClose","includes","classes","required"],"mappings":"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","sourcesContent":["import { DialogTitle, DialogContent, TextField, Typography, Button, DialogActions, DialogContentText, makeStyles, CircularProgress, Snackbar, FormHelperText, FormControl, FormLabel } from '@material-ui/core'\r\nimport { useState, ChangeEvent, FormEvent, useEffect, useRef, useCallback } from 'react'\r\nimport Dialog from './Dialog'\r\nimport createAccount from '../api/accounts/createAccount'\r\nimport start from '../api/bots/start'\r\nimport executeSupervisor from '../api/bots/executeSupervisor'\r\nimport exit from '../api/bots/exit'\r\nimport setLogged from '../api/accounts/setLogged'\r\n\r\nconst tv = (dispatch: (arg?: any) => any) => (event: ChangeEvent | InputEvent) =>\r\n  void dispatch(\r\n    ((event.target) as HTMLInputElement).value\r\n  )\r\n\r\nconst handleSubmit = (dispatch: (arg?: any) => any) => (event: FormEvent) => {\r\n  event.preventDefault()\r\n  dispatch()\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  progress: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  }\r\n}))\r\n\r\ntype Status = 'unlogged' | 'logging' | 'wrong_credentials' | 'challenge' | 'challenging' | 'wrong_challenge_code' | 'success'\r\n\r\nexport default ({ open, handleExit }: { open: boolean, handleExit: () => void }) => {\r\n  const [status, setStatus] = useState<Status>('unlogged')\r\n\r\n  const savedAccountId = useRef(null)\r\n  const savedBotId = useRef(null)\r\n\r\n  const [login, setLogin] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const log = async () => {\r\n    let botId = savedBotId.current\r\n    let accountId = savedAccountId.current\r\n\r\n    setStatus('logging')\r\n    if(botId === null){\r\n      if(accountId === null){\r\n        console.log('Creating account')\r\n        accountId = await createAccount({ login })\r\n        savedAccountId.current = accountId\r\n        console.log(`Account ${accountId} created`)\r\n      }\r\n\r\n      console.log(`Starting bot`)\r\n      botId = await start(accountId)\r\n      savedBotId.current = botId\r\n      console.log(`Bot ${botId} started`)\r\n      window.addEventListener('unload', exitBot)\r\n      console.log(`window.addEventListener('unload', exitBot)`)\r\n    }\r\n\r\n    console.log(`Logging with credentials { login: '${login}', password: '${password}' }`)\r\n    const result = await executeSupervisor(botId, 'login', { login, password })\r\n    console.log(`Result: ${result}`)\r\n\r\n    if(result === 'error'){\r\n      setStatus('wrong_credentials')\r\n      return\r\n    }\r\n\r\n    if(result === 'challenge'){\r\n      setStatus('challenge')\r\n      return\r\n    }\r\n\r\n    if(result === 'success'){\r\n      setStatus('success')\r\n      setLogged(savedAccountId.current, login)\r\n      return\r\n    }\r\n\r\n    throw `Unknown login result (${result})`\r\n  }\r\n\r\n  const [challengeCode, setChallengeCode] = useState('')\r\n\r\n  const challenge = async () => {\r\n    setStatus('challenging')\r\n    console.log(`Passing challenge with code ${challengeCode}`)\r\n    const result = await executeSupervisor(savedBotId.current, 'challenge', challengeCode)\r\n    console.log(`Passed challenge with result ${result}`)\r\n    \r\n    if(result === 'error'){\r\n      setStatus('wrong_challenge_code')\r\n      return\r\n    }\r\n\r\n    if(result === 'success'){\r\n      setStatus('success')\r\n      setLogged(savedAccountId.current, login)\r\n      return\r\n    }\r\n\r\n    throw `Unknown challenge result (${result})`\r\n  }\r\n\r\n  const exitBot = () => {\r\n    exit(savedBotId.current)\r\n    console.log(`Exitting bot ${savedBotId.current}`)\r\n\r\n    setStatus('unlogged')\r\n    savedBotId.current = null\r\n    savedAccountId.current = null\r\n    setLogin('')\r\n    setPassword('')\r\n\r\n    window.removeEventListener('unload', exitBot)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    const preventClose: Status[] = ['logging', 'challenging']\r\n    if(preventClose.includes(status))\r\n      return\r\n\r\n    if(savedBotId.current !== null){\r\n      exitBot()\r\n    }\r\n\r\n    handleExit()\r\n  }\r\n\r\n  const classes = useStyles({})\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} maxWidth=\"xs\" fullWidth={true}>\r\n      {(status === 'unlogged' || status === 'wrong_credentials') && (\r\n        <form onSubmit={handleSubmit(log)}>\r\n          <DialogTitle>Add Instagram account</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              We do not store Instagram passwords.\r\n            </DialogContentText>\r\n            <FormControl error={status === 'wrong_credentials'} className={classes.form}>\r\n              {status === 'wrong_credentials' && <FormLabel>Wrong password or login</FormLabel>}\r\n              <TextField\r\n                label=\"login\"\r\n                value={login}\r\n                onChange={tv(setLogin)}\r\n                inputProps={{ required: true }}\r\n              />\r\n              <TextField\r\n                label=\"password\"\r\n                value={password}\r\n                onChange={tv(setPassword)}\r\n                inputProps={{ required: true }}\r\n              />\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"primary\" type=\"submit\">Log me</Button>\r\n          </DialogActions>\r\n        </form>\r\n      )}\r\n      {status === 'logging' && (\r\n        <>\r\n          <DialogTitle>Add Instagram account</DialogTitle>\r\n          <DialogContent>\r\n            <div className={classes.progress}>\r\n              <CircularProgress />\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"primary\" disabled>Log me</Button>\r\n          </DialogActions>\r\n        </>\r\n      )}\r\n      {(status === 'challenge' || status === 'wrong_challenge_code') && (\r\n        <form onSubmit={handleSubmit(challenge)}>\r\n          <DialogTitle>Add Instagram account</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Instagram sent authentication code to your e-mail.\r\n            </DialogContentText>\r\n            <FormControl error={status === 'wrong_challenge_code'} className={classes.form}>\r\n              {status === 'wrong_challenge_code' && <FormLabel>Wrong code</FormLabel>}\r\n              <TextField\r\n                label=\"code\"\r\n                value={challengeCode}\r\n                onChange={tv(setChallengeCode)}\r\n                required\r\n              />\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"primary\" type=\"submit\">Enter my code</Button>\r\n          </DialogActions>\r\n        </form>\r\n      )}\r\n      {status === 'challenging' && (\r\n        <>\r\n          <DialogTitle>Add Instagram account</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Instagram sent authentication code to your e-mail.\r\n            </DialogContentText>\r\n            <div className={classes.progress}>\r\n              <CircularProgress />\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"primary\" disabled>Enter my code</Button>\r\n          </DialogActions>\r\n        </>\r\n      )}\r\n      {status === 'success' && (\r\n        <>\r\n          <DialogTitle>Add Instagram account</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Logged to { login } account!\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"primary\" onClick={handleClose}>Okay</Button>\r\n          </DialogActions>\r\n        </>\r\n      )}\r\n    </Dialog>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}