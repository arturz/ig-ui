{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Artur\\\\Documents\\\\Programming\\\\ig\\\\relay\\\\www\\\\client\\\\pages\\\\bot.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useCallback } from 'react';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nimport { Paper, Button, Menu, MenuItem, Typography, makeStyles, Tabs, Tab, Box, AppBar } from '@material-ui/core';\nimport Layout from '../components/Layout';\nimport getAccounts from '../utils/api/getAccounts';\nimport { FormatListBulletedOutlined, TrendingUpOutlined, ThreeSixtyOutlined, SettingsApplicationsOutlined } from '@material-ui/icons';\nimport { connect } from 'react-redux';\nimport Index from '../components/Bot/Index';\nimport Logs from '../components/Bot/Logs';\nimport AddAccountDialog from '../components/AddAccountDialog';\nimport Test from '../components/Bot/Test';\nimport Config from '../components/Bot/Config';\nimport withRestricted from '../utils/withRestricted';\nconst useStyles = makeStyles(theme => ({\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    //hack for margins betweens lines\n    marginBottom: -theme.spacing(1),\n    '& > *': {\n      marginBottom: theme.spacing(1)\n    }\n  },\n  headerTitle: {\n    flexGrow: 1,\n    fontWeight: 300,\n    marginLeft: theme.spacing(1)\n  }\n  /*menuRow: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  menuLabel: {\r\n    display: 'inline',\r\n    marginRight: theme.spacing(2)\r\n  }*/\n\n}));\nconst tabs = [{\n  name: 'Jobs',\n  icon: __jsx(TrendingUpOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }),\n  getContent: props => __jsx(Index, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))\n}, {\n  name: 'Logs',\n  icon: __jsx(FormatListBulletedOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }),\n  getContent: props => __jsx(Logs, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))\n}, {\n  name: 'Test',\n  icon: __jsx(ThreeSixtyOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }),\n  getContent: props => __jsx(Test, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))\n}, {\n  name: 'Config',\n  icon: __jsx(SettingsApplicationsOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }),\n  getContent: props => __jsx(Config, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))\n}];\n\nconst mapStateToProps = state => ({\n  currentAccount: state.bot.currentAccount\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentAccount: account => dispatch({\n    type: 'setCurrentAccount',\n    payload: account\n  })\n});\n\nconst Bot = connect(mapStateToProps, mapDispatchToProps)(({\n  currentAccount,\n  accounts,\n  tab,\n  setCurrentAccount\n}) => {\n  const {\n    0: tabIndex,\n    1: setTabIndex\n  } = useState(tab);\n\n  const changeAccount = accountId => useCallback(() => {\n    setCurrentAccount(accounts.find(account => account.accountId === accountId));\n    closeMenu();\n    cookie.set('accountId', accountId, {\n      expires: 365\n    });\n  }, []);\n\n  const {\n    0: menuElement,\n    1: setMenuElement\n  } = useState(null);\n  const openMenu = useCallback(event => setMenuElement(event.currentTarget), []);\n  const closeMenu = useCallback(() => setMenuElement(null), []);\n  const {\n    0: addAccountDialog,\n    1: setAddAccountDialog\n  } = useState(false);\n\n  const toggleAddAccountDialog = () => setAddAccountDialog(value => !value);\n\n  const classes = useStyles({});\n  if (currentAccount === null) return __jsx(AddAccountDialog, {\n    open: true,\n    handleExit: () => location.reload(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  });\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(AddAccountDialog, {\n    open: addAccountDialog,\n    handleExit: toggleAddAccountDialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), __jsx(Paper, {\n    elevation: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    elevation: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Paper, {\n    square: true,\n    elevation: 3,\n    color: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(Box, {\n    m: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(\"header\", {\n    className: classes.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(Typography, {\n    className: classes.headerTitle,\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Current account: \", currentAccount.login), __jsx(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    \"aria-controls\": \"accounts-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: openMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, currentAccount.login), __jsx(Menu, {\n    id: \"accounts-menu\",\n    anchorEl: menuElement,\n    keepMounted: true,\n    open: Boolean(menuElement),\n    onClose: closeMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, accounts.map(({\n    login,\n    accountId\n  }) => __jsx(MenuItem, _extends({\n    key: accountId,\n    onClick: changeAccount(accountId)\n  }, currentAccount.accountId === accountId && {\n    selected: true\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), login)), __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), __jsx(MenuItem, {\n    onClick: () => {\n      closeMenu();\n      toggleAddAccountDialog();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Add account\"))))), __jsx(Tabs, {\n    indicatorColor: \"secondary\",\n    textColor: \"secondary\",\n    value: tabIndex,\n    onChange: (event, newValue) => setTabIndex(newValue),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, tabs.map(({\n    name\n  }) => __jsx(Tab, {\n    label: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })))), __jsx(Box, {\n    p: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, tabs[tabIndex].getContent())));\n}); //@ts-ignore\n\nBot.getInitialProps = async ctx => {\n  const accounts = await getAccounts(ctx);\n  if (accounts.length === 0) return {\n    accounts: [],\n    tab: 0\n  };\n  const accountId = Number(nextCookie(ctx).accountId);\n  const account = accountId && accounts.find(account => account.accountId === accountId) || accounts[0];\n  ctx.store.dispatch({\n    type: 'setCurrentAccount',\n    payload: account\n  });\n  const tab = Math.min(Number(nextCookie(ctx).tab) || 0, tabs.length - 1);\n  return {\n    accounts,\n    tab\n  };\n};\n\nexport default withRestricted(Bot);","map":{"version":3,"sources":["C:/Users/Artur/Documents/Programming/ig/relay/www/client/pages/bot.tsx"],"names":["useState","useCallback","nextCookie","cookie","Paper","Button","Menu","MenuItem","Typography","makeStyles","Tabs","Tab","Box","AppBar","Layout","getAccounts","FormatListBulletedOutlined","TrendingUpOutlined","ThreeSixtyOutlined","SettingsApplicationsOutlined","connect","Index","Logs","AddAccountDialog","Test","Config","withRestricted","useStyles","theme","header","display","alignItems","flexWrap","marginBottom","spacing","headerTitle","flexGrow","fontWeight","marginLeft","tabs","name","icon","getContent","props","mapStateToProps","state","currentAccount","bot","mapDispatchToProps","dispatch","setCurrentAccount","account","type","payload","Bot","accounts","tab","tabIndex","setTabIndex","changeAccount","accountId","find","closeMenu","set","expires","menuElement","setMenuElement","openMenu","event","currentTarget","addAccountDialog","setAddAccountDialog","toggleAddAccountDialog","value","classes","location","reload","login","Boolean","map","selected","newValue","getInitialProps","ctx","length","Number","store","Math","min"],"mappings":"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","sourcesContent":["import { useState, useCallback, useEffect } from 'react'\r\nimport nextCookie from 'next-cookies'\r\nimport cookie from 'js-cookie'\r\nimport { Paper, Button, Menu, MenuItem, Typography, ListItem, ListItemText, List, ListItemIcon, makeStyles, Theme, Divider, CardHeader, Tabs, Tab, Box, AppBar } from '@material-ui/core'\r\nimport Layout from '../components/Layout'\r\nimport getAccounts from '../utils/api/getAccounts'\r\nimport redirectOnError from '../utils/redirectOnError'\r\nimport { Card, CardContent, Grid } from '@material-ui/core'\r\nimport { FormatListBulletedOutlined, TrendingUpOutlined, ThreeSixtyOutlined, SettingsApplicationsOutlined, Add } from '@material-ui/icons'\r\nimport { connect } from 'react-redux'\r\nimport { Account } from '../types/Account'\r\nimport Index from '../components/Bot/Index'\r\nimport Logs from '../components/Bot/Logs'\r\nimport AddAccountDialog from '../components/AddAccountDialog'\r\nimport Test from '../components/Bot/Test'\r\nimport Config from '../components/Bot/Config'\r\nimport withRestricted from '../utils/withRestricted'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n\r\n    //hack for margins betweens lines\r\n    marginBottom: -theme.spacing(1),\r\n    '& > *': {\r\n      marginBottom: theme.spacing(1)\r\n    }\r\n  },\r\n  headerTitle: {\r\n    flexGrow: 1,\r\n    fontWeight: 300,\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  /*menuRow: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  menuLabel: {\r\n    display: 'inline',\r\n    marginRight: theme.spacing(2)\r\n  }*/\r\n}))\r\n\r\nconst tabs = [{\r\n  name: 'Jobs',\r\n  icon: <TrendingUpOutlined />,\r\n  getContent: (props?: any) => <Index {...props} />\r\n}, {\r\n  name: 'Logs',\r\n  icon: <FormatListBulletedOutlined />,\r\n  getContent: (props?: any) => <Logs {...props} />\r\n}, {\r\n  name: 'Test',\r\n  icon: <ThreeSixtyOutlined />,\r\n  getContent: (props?: any) => <Test {...props} />\r\n}, {\r\n  name: 'Config',\r\n  icon: <SettingsApplicationsOutlined />,\r\n  getContent: (props?: any) => <Config {...props} />\r\n}]\r\n\r\nconst mapStateToProps = state => ({ \r\n  currentAccount: state.bot.currentAccount \r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentAccount: account => \r\n    dispatch({ type: 'setCurrentAccount',  payload: account })\r\n})\r\n\r\nconst Bot = connect(mapStateToProps, mapDispatchToProps)(({ currentAccount, accounts, tab, setCurrentAccount }: { currentAccount: Account, accounts: Account[], setCurrentAccount: Function, tab: number }) => {\r\n  const [tabIndex, setTabIndex] = useState(tab)\r\n\r\n  const changeAccount = (accountId: number) => useCallback(() => {\r\n    setCurrentAccount(accounts.find(account => account.accountId === accountId))\r\n    closeMenu()\r\n    cookie.set('accountId', accountId, { expires: 365 })\r\n  }, [])\r\n\r\n  const [menuElement, setMenuElement] = useState(null)\r\n  const openMenu = useCallback(event => setMenuElement(event.currentTarget), [])\r\n  const closeMenu = useCallback(() => setMenuElement(null), [])\r\n\r\n  const [addAccountDialog, setAddAccountDialog] = useState(false)\r\n  const toggleAddAccountDialog = () =>\r\n    setAddAccountDialog(value => !value)\r\n\r\n  const classes = useStyles({})\r\n\r\n  if(currentAccount === null)\r\n    return <AddAccountDialog open={true} handleExit={() => location.reload()} />\r\n\r\n  return (\r\n    <Layout>\r\n      <AddAccountDialog open={addAccountDialog} handleExit={toggleAddAccountDialog} />\r\n        <Paper elevation={1}>\r\n          <AppBar position=\"static\" color=\"default\" elevation={2}>\r\n            <Paper square elevation={3} color=\"default\">\r\n              <Box m={1}>\r\n                <header className={classes.header}>\r\n                  <Typography className={classes.headerTitle} variant=\"h6\">Current account: {currentAccount.login}</Typography>\r\n                  <Button color=\"primary\" variant=\"contained\" aria-controls=\"accounts-menu\" aria-haspopup=\"true\" onClick={openMenu}>\r\n                    {currentAccount.login}\r\n                  </Button>\r\n                  <Menu id=\"accounts-menu\" anchorEl={menuElement} keepMounted open={Boolean(menuElement)} onClose={closeMenu}>\r\n                    {accounts.map(({ login, accountId }) =>\r\n                      <MenuItem key={accountId} onClick={changeAccount(accountId)} {...currentAccount.accountId === accountId && { selected: true }}>\r\n                        {login} \r\n                      </MenuItem>\r\n                    )}\r\n                    <hr />\r\n                    <MenuItem onClick={() => { closeMenu(); toggleAddAccountDialog() }}>\r\n                      Add account\r\n                    </MenuItem>\r\n                  </Menu>\r\n                </header>\r\n              </Box>\r\n            </Paper>\r\n            <Tabs \r\n              indicatorColor=\"secondary\"\r\n              textColor=\"secondary\"\r\n              value={tabIndex} \r\n              onChange={(event, newValue) => setTabIndex(newValue)}\r\n            >\r\n              {tabs.map(({ name }) => <Tab label={name} />)}\r\n            </Tabs>\r\n          </AppBar>\r\n          <Box p={3}>\r\n            {tabs[tabIndex].getContent()}\r\n          </Box>\r\n        </Paper>\r\n      {/*<Grid container direction=\"row-reverse\" spacing={2}>\r\n        <Grid item xs={12} md={4}>\r\n          <div className={classes.menuRow}>\r\n            <Typography variant=\"body1\" className={classes.menuLabel}>Current account:</Typography>\r\n            <Button color=\"primary\" variant=\"contained\" aria-controls=\"accounts-menu\" aria-haspopup=\"true\" onClick={openMenu}>\r\n              {currentAccount.login}\r\n            </Button>\r\n            <Menu id=\"accounts-menu\" anchorEl={menuElement} keepMounted open={Boolean(menuElement)} onClose={closeMenu}>\r\n              {accounts.map(({ login, accountId }) =>\r\n                <MenuItem key={accountId} onClick={changeAccount(accountId)} {...currentAccount.accountId === accountId && { selected: true }}>\r\n                  {login} \r\n                </MenuItem>\r\n              )}\r\n              <hr />\r\n              <MenuItem onClick={() => { closeMenu(); toggleAddAccountDialog() }}>\r\n                Add account\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n          <br />\r\n          <Typography variant=\"h5\" gutterBottom>Navigation</Typography>\r\n          <List>\r\n            {tabs.map(({ name, icon }, index) =>\r\n              <ListItem button selected={index === tabIndex} onClick={changeTab(index)} key={index}>\r\n                <ListItemIcon children={icon} />\r\n                <ListItemText primary={name} />\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                { tabs[tabIndex].name }\r\n              </Typography>\r\n              <Divider variant=\"middle\" />\r\n              <br />\r\n              { tabs[tabIndex].getContent() }\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>*/}\r\n    </Layout>\r\n  )\r\n})\r\n\r\n//@ts-ignore\r\nBot.getInitialProps = async ctx => {\r\n  const accounts = await getAccounts(ctx)\r\n  if(accounts.length === 0)\r\n    return {\r\n      accounts: [],\r\n      tab: 0\r\n    }\r\n\r\n  const accountId = Number(nextCookie(ctx).accountId)\r\n\r\n  const account = (accountId && accounts.find(account => account.accountId === accountId)) || accounts[0]\r\n\r\n  ctx.store.dispatch({ \r\n    type: 'setCurrentAccount', \r\n    payload: account \r\n  })\r\n\r\n  const tab = Math.min(Number(nextCookie(ctx).tab) || 0, tabs.length - 1)\r\n\r\n  return { \r\n    accounts,\r\n    tab\r\n  }\r\n}\r\n\r\nexport default withRestricted(Bot)"]},"metadata":{},"sourceType":"module"}