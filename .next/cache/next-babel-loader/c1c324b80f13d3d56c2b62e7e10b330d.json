{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"C:\\\\Users\\\\Artur\\\\Documents\\\\Programming\\\\ig\\\\relay\\\\www\\\\client\\\\pages\\\\login.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useCallback } from 'react';\nimport { TextField, Button, makeStyles, Card, CardContent, Typography, Avatar, Divider } from '@material-ui/core';\nimport fetch from 'isomorphic-unfetch';\nimport login from '../utils/auth/login';\nimport getServerHost from '../utils/getServerHost';\nimport Layout from '../components/Layout';\nimport { LockOutlined } from '@material-ui/icons';\nimport { connect } from 'react-redux';\nimport getUser from '../utils/getUser';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    card: {\n      maxWidth: 380,\n      margin: '0 auto'\n    },\n    form: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      margin: theme.spacing(2)\n    },\n    title: {\n      margin: theme.spacing(2, 0)\n    },\n    button: {\n      margin: theme.spacing(3, 0, 2)\n    },\n    divider: {\n      margin: theme.spacing(2, 0)\n    },\n    center: {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  };\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatchLogin: function dispatchLogin(user) {\n      return dispatch({\n        type: 'login',\n        payload: user\n      });\n    }\n  };\n};\n\nvar Login = function Login(_ref) {\n  var dispatchLogin = _ref.dispatchLogin;\n\n  var _useState = useState(''),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var handleSubmit = useCallback(function _callee(event) {\n    var response, _ref2, access_token, user;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"\".concat(getServerHost(), \"/auth/login\"), {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: _JSON$stringify({\n                username: username,\n                password: password\n              })\n            }));\n\n          case 4:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 8:\n            _ref2 = _context.sent;\n            access_token = _ref2.access_token;\n            login(access_token);\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(getUser());\n\n          case 13:\n            user = _context.sent;\n            console.log(user);\n            dispatchLogin(user);\n            _context.next = 19;\n            break;\n\n          case 18:\n            console.log('Login failed.');\n\n          case 19:\n            _context.next = 24;\n            break;\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](1);\n            console.error('You have an error in your code or there are Network issues.', _context.t0);\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 21]]);\n  }, [username, password]);\n  var classes = useStyles({});\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(LockOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h3\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Log in\"), __jsx(TextField, {\n    label: \"username\",\n    value: username,\n    onChange: function onChange(_ref3) {\n      var value = _ref3.target.value;\n      return setUsername(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), __jsx(TextField, {\n    label: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: function onChange(_ref4) {\n      var value = _ref4.target.value;\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Log in\")), __jsx(Divider, {\n    variant: \"fullWidth\",\n    orientation: \"horizontal\",\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"log me with google\")))));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/Artur/Documents/Programming/ig/relay/www/client/pages/login.tsx"],"names":["useState","useCallback","TextField","Button","makeStyles","Card","CardContent","Typography","Avatar","Divider","fetch","login","getServerHost","Layout","LockOutlined","connect","getUser","useStyles","theme","card","maxWidth","margin","form","display","flexDirection","alignItems","spacing","title","button","divider","center","justifyContent","mapStateToProps","state","mapDispatchToProps","dispatch","dispatchLogin","user","type","payload","Login","username","setUsername","password","setPassword","handleSubmit","event","preventDefault","method","headers","body","response","ok","json","access_token","console","log","error","classes","value","target"],"mappings":"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","sourcesContent":["import { useState, useCallback } from 'react'\r\nimport { TextField, Button, Theme, makeStyles, Card, CardContent, Typography, Avatar, Divider } from '@material-ui/core'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport login from '../utils/auth/login'\r\nimport getServerHost from '../utils/getServerHost'\r\nimport Layout from '../components/Layout'\r\nimport { LockOutlined } from '@material-ui/icons'\r\nimport { connect } from 'react-redux'\r\nimport getUser from '../utils/getUser'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  card: {\r\n    maxWidth: 380,\r\n    margin: '0 auto'\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    margin: theme.spacing(2)\r\n  },\r\n  title: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  center: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = state => ({})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatchLogin: (user) => \r\n    dispatch({ type: 'login', payload: user })\r\n})\r\n\r\nconst Login = ({ dispatchLogin }) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleSubmit = useCallback(async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const response = await fetch(`${getServerHost()}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password })\r\n      })\r\n      if(response.ok){\r\n        const { access_token } = await response.json()\r\n        login(access_token)\r\n\r\n        const user = await getUser()\r\n        console.log(user)\r\n        dispatchLogin(user)\r\n      } else {\r\n        console.log('Login failed.')\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        'You have an error in your code or there are Network issues.',\r\n        error\r\n      )\r\n    }\r\n  }, [username, password])\r\n\r\n  const classes = useStyles({})\r\n  return (\r\n    <Layout>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <Avatar>\r\n              <LockOutlined />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h3\" className={classes.title}>Log in</Typography>\r\n            <TextField label=\"username\" value={username} onChange={({ target: { value } }) => setUsername(value)} />\r\n            <TextField label=\"password\" type=\"password\" value={password} onChange={({ target: { value } }) => setPassword(value)} />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}>Log in</Button>\r\n          </form>\r\n          <Divider variant=\"fullWidth\" orientation=\"horizontal\" className={classes.divider} />\r\n          <div className={classes.center}>\r\n            <Button variant=\"contained\" color=\"primary\" disabled>\r\n              log me with google\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}