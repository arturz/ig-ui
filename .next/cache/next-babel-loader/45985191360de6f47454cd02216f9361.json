{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Artur\\\\Documents\\\\Programming\\\\ig\\\\relay\\\\www\\\\client\\\\pages\\\\_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from '@material-ui/core/styles/defaultTheme';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\";\nimport getUser from '../utils/getUser';\n\nconst initialState = () => ({\n  checkedAuth: false,\n  user: null,\n  bot: {\n    currentAccount: null\n  }\n});\n\nconst reducer = (state = initialState(), action) => {\n  switch (action.type) {\n    case 'checkedAuth':\n      return _objectSpread({}, state, {\n        checkedAuth: true\n      });\n\n    case 'login':\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case 'logout':\n      return _objectSpread({}, state, {\n        user: null\n      });\n\n    case 'setCurrentAccount':\n      return _objectSpread({}, state, {\n        bot: _objectSpread({}, state.bot, {\n          currentAccount: action.payload\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n/**\r\n* @param {object} initialState\r\n* @param {boolean} options.isServer indicates whether it is a server side or client side\r\n* @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\r\n* @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\r\n* @param {boolean} options.debug User-defined debug mode param\r\n* @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR \r\n*/\n\n\nconst makeStore = (initialState, options) => {\n  return createStore(reducer, initialState);\n};\n\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    if (!ctx.store.getState().checkedAuth) {\n      const user = await getUser(ctx);\n      if (user) ctx.store.dispatch({\n        type: 'login',\n        payload: user\n      });\n      ctx.store.dispatch({\n        type: 'checkedAuth'\n      });\n    }\n\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    //@ts-ignore\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"InstaFeed\")), __jsx(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["C:/Users/Artur/Documents/Programming/ig/relay/www/client/pages/_app.tsx"],"names":["React","App","Head","ThemeProvider","theme","createStore","Provider","withRedux","getUser","initialState","checkedAuth","user","bot","currentAccount","reducer","state","action","type","payload","makeStore","options","MyApp","getInitialProps","Component","ctx","store","getState","dispatch","pageProps","render","props"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport App from 'next/app'\r\nimport Head from 'next/head'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport theme from '@material-ui/core/styles/defaultTheme'\r\nimport { createStore } from \"redux\"\r\nimport { Provider } from \"react-redux\"\r\nimport withRedux from \"next-redux-wrapper\"\r\nimport { Account } from '../types/Account'\r\nimport { User } from '../types/User'\r\nimport getUser from '../utils/getUser'\r\n\r\ntype State = {\r\n  checkedAuth: boolean,\r\n  user: null | User\r\n  bot: {\r\n    currentAccount: null | Account\r\n  }\r\n}\r\n\r\nconst initialState = (): State => ({\r\n  checkedAuth: false,\r\n  user: null,\r\n  bot: {\r\n    currentAccount: null\r\n  }\r\n})\r\n\r\nconst reducer = (state = initialState(), action) => {\r\n  switch (action.type) {\r\n    case 'checkedAuth':\r\n      return {\r\n        ...state,\r\n        checkedAuth: true\r\n      }\r\n    case 'login':\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      }\r\n    case 'logout':\r\n      return {\r\n        ...state,\r\n        user: null\r\n      }\r\n    case 'setCurrentAccount':\r\n      return {\r\n        ...state, \r\n        bot: {\r\n          ...state.bot,\r\n          currentAccount: action.payload\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**\r\n* @param {object} initialState\r\n* @param {boolean} options.isServer indicates whether it is a server side or client side\r\n* @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\r\n* @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\r\n* @param {boolean} options.debug User-defined debug mode param\r\n* @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR \r\n*/\r\nconst makeStore = (initialState, options) => {\r\n  return createStore(reducer, initialState);\r\n}\r\n\r\n\r\nclass MyApp extends App {\r\n  // Only uncomment this method if you have blocking data requirements for\r\n  // every single page in your application. This disables the ability to\r\n  // perform automatic static optimization, causing every page in your app to\r\n  // be server-side rendered.\r\n  //\r\n  // static async getInitialProps(appContext) {\r\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n  //   const appProps = await App.getInitialProps(appContext);\r\n  //\r\n  //   return { ...appProps }\r\n  // }\r\n\r\n  static async getInitialProps({ Component, ctx }) {\r\n    if(!ctx.store.getState().checkedAuth){\r\n      const user = await getUser(ctx)\r\n      if(user)\r\n        ctx.store.dispatch({ type: 'login', payload: user })\r\n\r\n      ctx.store.dispatch({ type: 'checkedAuth' })\r\n    }\r\n\r\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n    return { pageProps };\r\n  }\r\n\r\n  render() {\r\n    //@ts-ignore\r\n    const { Component, pageProps, store } = this.props\r\n    return (\r\n      <Provider store={store}>\r\n        <Head>\r\n          <title>InstaFeed</title>\r\n        </Head>\r\n        <ThemeProvider theme={theme}>\r\n          <Component {...pageProps} />\r\n        </ThemeProvider>\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRedux(makeStore)(MyApp)"]},"metadata":{},"sourceType":"module"}