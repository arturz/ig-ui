{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport nextCookie from 'next-cookies';\nimport fetch from 'isomorphic-unfetch';\nimport getServerHost from '../getServerHost';\nexport default (function _callee(ctx) {\n  var _nextCookie, token, apiUrl, response, accounts;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _nextCookie = nextCookie(ctx), token = _nextCookie.token;\n          apiUrl = getServerHost(ctx.req) + '/accounts';\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(apiUrl, {\n            headers: {\n              Authorization: \"Bearer \".concat(token)\n            }\n          }));\n\n        case 5:\n          response = _context.sent;\n\n          if (!response.ok) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          accounts = _context.sent;\n          return _context.abrupt(\"return\", accounts);\n\n        case 13:\n          return _context.abrupt(\"return\", null);\n\n        case 14:\n          _context.next = 20;\n          break;\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](2);\n          console.warn(_context.t0);\n          return _context.abrupt(\"return\", null);\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 16]]);\n});","map":{"version":3,"sources":["C:/Users/Artur/Documents/Programming/ig/relay/www/client/utils/api/getAccounts.tsx"],"names":["nextCookie","fetch","getServerHost","ctx","token","apiUrl","req","headers","Authorization","response","ok","json","accounts","console","warn"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAGA,gBAAe,iBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACKH,UAAU,CAACG,GAAD,CADf,EACLC,KADK,eACLA,KADK;AAEPC,UAAAA,MAFO,GAEEH,aAAa,CAACC,GAAG,CAACG,GAAL,CAAb,GAAyB,WAF3B;AAAA;AAAA;AAAA,2CAKYL,KAAK,CAACI,MAAD,EAAS;AAAEE,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,mBAAYJ,KAAZ;AAAf;AAAX,WAAT,CALjB;;AAAA;AAKLK,UAAAA,QALK;;AAAA,eAMRA,QAAQ,CAACC,EAND;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAOyBD,QAAQ,CAACE,IAAT,EAPzB;;AAAA;AAOHC,UAAAA,QAPG;AAAA,2CAQFA,QARE;;AAAA;AAAA,2CAUF,IAVE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaXC,UAAAA,OAAO,CAACC,IAAR;AAbW,2CAcJ,IAdI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import nextCookie from 'next-cookies'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport getServerHost from '../getServerHost'\r\nimport {Account} from '../../types/Account'\r\n\r\nexport default async (ctx) => {\r\n  const { token } = nextCookie(ctx)\r\n  const apiUrl = getServerHost(ctx.req) + '/accounts'\r\n\r\n  try {\r\n    const response = await fetch(apiUrl, { headers: { Authorization: `Bearer ${token}` } })\r\n    if(response.ok){\r\n      const accounts: Account[] = await response.json()\r\n      return accounts\r\n    } else {\r\n      return null\r\n    }\r\n  } catch (error) {\r\n    console.warn(error)\r\n    return null\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}